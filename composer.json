{
    "name": "digichange/laravel",
    "type": "project",
    "description": "The Digichange Laravel Framework.",
    "keywords": [
        "framework",
        "laravel",
        "digichange"
    ],
    "license": "MIT",
    "require": {
        "php": ">=7.3",
        "ext-json": "*",
        "arcanedev/log-viewer": "~4.7.0",
        "barryvdh/laravel-cors": "^0.11.3",
        "beberlei/doctrineextensions": "^1.0",
        "brozot/laravel-fcm": "^1.3",
        "cakephp/chronos": "^2.0",
        "fideloper/proxy": "^4.0",
        "flugger/laravel-responder": "^3.0",
        "gedmo/doctrine-extensions": "^2.4",
        "guzzlehttp/guzzle": "^6.3",
        "laravel-doctrine/extensions": "^1.0",
        "laravel-doctrine/fluent": "^1.1",
        "laravel-doctrine/orm": "^1.4",
        "laravel/framework": "5.8.*",
        "laravel/telescope": "^2.0",
        "laravel/tinker": "^1.0",
        "laravelcollective/html": "^5.8",
        "league/flysystem-aws-s3-v3": "^1.0",
        "litvinjuan/ethereum-validator": "0.0.1",
        "predis/predis": "^1.1",
        "sentry/sentry": "^2.0",
        "sentry/sentry-laravel": "1.4.1",
        "tymon/jwt-auth": "1.0.0-rc.4.1"
    },
    "require-dev": {
        "barryvdh/laravel-ide-helper": "^2.4",
        "beyondcode/laravel-dump-server": "^1.0",
        "brainmaestro/composer-git-hooks": "^2.4",
        "filp/whoops": "^2.1",
        "friendsofphp/php-cs-fixer": "^2.7",
        "fzaninotto/faker": "^1.4",
        "garygreen/pretty-routes": "^1.0",
        "mockery/mockery": "^1.0",
        "nunomaduro/collision": "^2.0",
        "phpstan/phpstan": "^0.11",
        "phpstan/phpstan-mockery": "^0.11",
        "phpstan/phpstan-phpunit": "^0.11",
        "phpunit/phpunit": "^7.5",
        "roave/security-advisories": "dev-master"
    },
    "suggest": {
        "intervention/image": "PHP image handling and manipulation library.",
        "cviebrock/image-validator": "Extra Laravel validation rules for dealing with images.",
        "dingo/api": "API development.",
        "omnipay/omnipay": "Payment gateway abstraction.",
        "moneyphp/money": "Work with money safer, easier, and fun!",
        "beberlei/assert": "^2.6"
    },
    "config": {
        "optimize-autoloader": true,
        "preferred-install": "dist",
        "sort-packages": true
    },
    "extra": {
        "laravel": {
            "dont-discover": [
                "sentry/sentry-laravel"
            ]
        },
        "hooks": {
            "pre-commit": "docker run --rm -t -v /${PWD}:/code php bash -c \"cd /code; vendor/bin/phpunit; php -d memory_limit=500M vendor/bin/phpstan analyse -l 3 -c phpstan.neon src app config resources tests;\"",
            "post-commit": "docker run --rm -t -v /${PWD}:/code php bash -c \"cd /code; vendor/bin/php-cs-fixer fix --allow-risky=yes\""
        }
    },
    "autoload": {
        "psr-4": {
            "App\\": "app/",
            "Digichange\\": "src/",
            "Lib\\": "lib/"
        },
        "classmap": [
            "database/seeds",
            "database/factories"
        ],
        "files": [
            "app/helpers.php"
        ]
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "minimum-stability": "dev",
    "prefer-stable": true,
    "scripts": {
        "post-autoload-dump": [
            "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
            "@php artisan package:discover"
        ],
        "post-root-package-install": [
            "bash -c 'sed -i \"s/project-name/${PWD##*/}/g\" .env.example docker-compose.yml sonar-project.properties docker/postgres/Dockerfile client/webpack.config.js readme.md'",
            "bash -c 'echo \"Please remember to change NAME and DESCRIPTION on your composer.json with the real project name\"'",
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\""
        ],
        "post-create-project-cmd": [
            "@php artisan key:generate --ansi",
            "php composer/replace_namespaces.php",
            "bash -c 'rm -rf composer'"
        ],
        "post-install-cmd": [
            "bash -c 'vendor/bin/cghooks add --ignore-lock --force-win'"
        ],
        "post-update-cmd": [
            "bash -c 'vendor/bin/cghooks update --force-win'"
        ],
        "build": [
            "php -r \"file_exists('.env') || copy('.env.example', '.env');\"",
            "php artisan key:generate",
            "php artisan clear-compiled",
            "php artisan vendor:publish --tag=\"assets\"",
            "php artisan doctrine:clear:metadata:cache",
            "php artisan doctrine:generate:proxies",
            "php artisan migrate",
            "php artisan doctrine:schema:update --force",
            "php artisan jwt:secret"
        ],
        "stan": "php -d memory_limit=500M ./vendor/bin/phpstan analyse -l 3 -c phpstan.neon src app config resources tests",
        "unit": "./vendor/bin/phpunit",
        "cs": "./vendor/bin/php-cs-fixer fix --allow-risky=yes",
        "coverage": "./vendor/bin/phpunit --coverage-html coverage"
    }
}
